{"version":3,"sources":["components/Header.js","components/Transaction.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","Transaction","transaction","deleteTransaction","useContext","GlobalContext","sing","amount","color","className","text","Math","abs","onClick","id","state","action","type","transactions","filter","payload","initialState","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","addTransaction","Balance","total","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c320a99.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sing = transaction.amount < 0 ? '-' : '+';\r\n    const color = transaction.amount < 0 ? 'minus' : 'plus';\r\n\r\n    return (\r\n        <li className={color}>\r\n            {transaction.text} <span>{sing}${Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import Transaction from \"../components/Transaction\";\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            };\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial state\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    \r\n    // Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n    \r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n        }}>\r\n            { children }\r\n        </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${ total }</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense = (amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n            <h4>Income</h4>\r\n            <p className=\"money plus\">+${income}</p>\r\n        </div>\r\n        <div>\r\n            <h4>Expense</h4>\r\n            <p className=\"money minus\">-${expense}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react';\r\nimport Transaction from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n        <h3>History</h3>\r\n        <ul className=\"list\">\r\n            {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const { addTransaction } = useContext(GlobalContext);\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />(negative - expense, positive - income)</label>\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}